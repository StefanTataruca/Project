/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.acam;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author srefa
 */
public class Panel2 extends javax.swing.JFrame {

    /**
     * Creates new form Panel2
     */
static Connection con;
static ResultSet rs;
static ResultSet rs1;
static ResultSet rs2;
static ResultSet rs3;
static ResultSet rs4;
static ResultSet rs5;
static ResultSet rs6;
static PreparedStatement pst;
static Statement st;
static Statement st1;
static Statement st2;
static Statement st3;
static Statement st4;
static Statement st5;
static Statement st6;
String get_city;String get_product;int i;
    public Panel2(String city,String product,int j) {
setTitle("ACAM");
i=j;
get_city=city;
get_product=product;
System.out.print(get_city+get_product);
        initComponents();
this.setLocationRelativeTo(null);
setResizable(false);
Fill_Label_Text();

}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        info_inventory = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(213, 191, 191));

        jComboBox1.setBackground(new java.awt.Color(109, 130, 153));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(109, 130, 153));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(109, 130, 153));
        jButton1.setForeground(new java.awt.Color(49, 107, 131));
        jButton1.setText("Previous");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(info_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(info_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
new Panel1(i).setVisible(true);
dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
public  void Fill_Label_Text(){
try{
      con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
      st = con.createStatement();
        st1 = con.createStatement();
        st2 = con.createStatement();
        st3=con.createStatement();
      String s = "SELECT Products.Shelf FROM Stores LEFT JOIN Cities ON  Cities.City=Stores.City LEFT JOIN Products ON Products.Id_Store=Stores.Id_Store Where Cities.City='"+get_city+"' AND Products.Name_product='"+get_product+"'";


        String s1 =  "SELECT Stores.Name_Store\n" +
        "FROM Stores\n" +
        "LEFT JOIN Cities ON  Cities.City=Stores.City \n" +
        "LEFT JOIN Products ON Products.Id_Store=Stores.Id_Store\n" +
        "Where Cities.City='"+get_city+"' AND Products.Name_product='"+get_product+"'";


        String s2 = "SELECT Stores.Loc\n" +
        "FROM Stores\n" +
        "LEFT JOIN Cities ON  Cities.City=Stores.City \n" +
        "LEFT JOIN Products ON Products.Id_Store=Stores.Id_Store\n" +
        "Where Cities.City='"+get_city+"' AND Products.Name_product='"+get_product+"'";

        String s3=" SELECT Products.Id_product\n" +
        " FROM Products\n" +
        " WHERE Products.Name_product='"+get_product+"'";


        rs = st.executeQuery(s);
        rs1 = st1.executeQuery(s1);
        rs2 = st2.executeQuery(s2);
        rs3=st3.executeQuery(s3);

        while(rs.next() && rs1.next() && rs2.next() && rs3.next())
        {
   

        String shelf=rs.getString("Shelf");
        String name_store= rs1.getString("Name_Store");
        String Location=rs2.getString("Loc");
        int Id_product=rs3.getInt("Id_product");

        info_inventory.setText("Produsul are stocul: "+Get_inventory(Get_Id(name_store,Location),Get_product_id(Get_Id(name_store,Location))));
        jComboBox1.addItem(get_product+" poti gasi pe raftul "+shelf+ "");
        jComboBox1.addItem(" in magazinul " +name_store+" de pe "+Location);
        }
    }catch(SQLException ex){
        Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
    }finally{
        try{
            st.close();
            rs.close();
            con.close();
        }catch(Exception ex){
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
}
        public int Get_Id( String Store_Name,String Location_Of_Store){
        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st4 = con.createStatement();
              String s4 = "SELECT Stores.Id_Store\n" +
        " FROM Stores\n" +
        " INNER JOIN Cities ON Cities.City=Stores.City\n" +
        " WHERE Stores.Name_Store='"+Store_Name+"' AND Cities.City='"+get_city+"' AND Stores.Loc='"+Location_Of_Store+"'";


        rs4 = st4.executeQuery(s4);

        if(rs4.next())
        {
        int id_Store=rs4.getInt("Id_Store");
//        System.out.print("\n");
//        System.out.print(id_Store);
        return id_Store;

       }
    }catch(SQLException ex){
        Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
    }finally{
        try{

        }catch(Exception ex){
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }
    }

        int id_Store=-1;
        return id_Store;
}
public int Get_inventory(int Store_Id,int Product_Id)
{ 
try{
      con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
      st5 = con.createStatement();
      String s5 = " SELECT Products.Inventory\n" +
        " FROM Products\n" +
        " INNER JOIN Stores on Stores.Id_Store=Products.Id_Store\n" +
        " WHERE Stores.Id_Store="+Store_Id+" AND Products.Name_product='"+get_product+"' AND Products.Id_product="+Product_Id;


        rs5 = st5.executeQuery(s5);

        if(rs5.next())
        {
        int inventory=rs5.getInt("Inventory");
        return inventory;
       }
        }catch(SQLException ex){
        Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }finally{
        try{

        }catch(Exception ex){
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    int inventory=-1;
    System.out.println("Hatzzz");
    return inventory;
}
public int Get_product_id(int Store_Id)
{
try{
      con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
      st6 = con.createStatement();
      String s6 = " SELECT Products.Id_product\n" +
        " FROM Products\n" +
        " INNER JOIN Stores on Stores.Id_Store=Products.Id_Store\n" +
        " WHERE Stores.Id_Store="+Store_Id+" AND Products.Name_product='"+get_product+"'";


        rs6 = st6.executeQuery(s6);

        if(rs6.next())
        {
        int product_id=rs6.getInt("Id_product");
        System.out.println(product_id);
        return product_id;
       }
        }catch(SQLException ex){
        Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }finally{
        try{

        }catch(Exception ex){
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
        int product_id=-1;
        System.out.println("Hatzzz");
        return product_id;
}
    public  void Add_Store_Name(){
        try{
        String value= jComboBox1.getSelectedItem().toString();
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();

        String s= "SELECT Stores.Name_Store\n" +
        "FROM Stores\n" +
        "LEFT JOIN Cities ON  Cities.City=Stores.City \n" +
        "LEFT JOIN Products ON Products.Id_Store=Stores.Id_Store\n" +
        "Where Cities.City='"+get_city+"' AND Products.Name_product='"+get_product+"'";



        rs = st.executeQuery(s);

        while(rs.next() )
        {
        jComboBox1.addItem(value+" aflandu-se in magazinul"+rs.getString("Name_Store"));
        }
    }catch(SQLException ex){
        Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
    }finally{
        try{
            st.close();
            rs.close();
            con.close();
        }catch(Exception ex){
            Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
}
    public  void Add_Store_Street(){
        try{
        String value= jComboBox1.getSelectedItem().toString();
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();

        String s=  "SELECT Stores.Name_Store\n" +
        "FROM Stores\n" +
        "LEFT JOIN Cities ON  Cities.City=Stores.City \n" +
        "LEFT JOIN Products ON Products.Id_Store=Stores.Id_Store\n" +
        "Where Cities.City='"+get_city+"' AND Products.Name_product='"+get_product+"'";



        rs = st.executeQuery(s);

                while(rs.next() )
                {
        jComboBox1.addItem(value+" pe strada"+rs.getString("Loc"));
                }
            }catch(SQLException ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                    st.close();
                    rs.close();
                    con.close();
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel info_inventory;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}

