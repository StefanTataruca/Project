/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.acam;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author srefa
 */
public class Admin_panel extends javax.swing.JFrame {
static Connection con;
static ResultSet rs;
static PreparedStatement pst;
static Statement st;

    /**
     * Creates new form Admin_panel
     */
    public Admin_panel() {
        initComponents();
this.setLocationRelativeTo(null);
setResizable(false);
Fillcombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        city = new javax.swing.JComboBox<>();
        store = new javax.swing.JComboBox<>();
        product = new javax.swing.JComboBox<>();
        spinner = new javax.swing.JSpinner();
        for_store = new javax.swing.JButton();
        for_city = new javax.swing.JButton();
        info_inventory = new javax.swing.JLabel();
        new_inventory = new javax.swing.JLabel();
        butt_spinner = new javax.swing.JButton();
        user_pnl = new javax.swing.JButton();

        jSpinner1.setUI(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(648, 438));
        setSize(new java.awt.Dimension(648, 438));

        jPanel1.setBackground(new java.awt.Color(213, 191, 191));
        jPanel1.setPreferredSize(new java.awt.Dimension(648, 438));

        city.setBackground(new java.awt.Color(109, 130, 153));
        city.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        city.setForeground(new java.awt.Color(109, 130, 153));
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        store.setBackground(new java.awt.Color(109, 130, 153));
        store.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        store.setForeground(new java.awt.Color(109, 130, 153));
        store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeActionPerformed(evt);
            }
        });

        product.setBackground(new java.awt.Color(109, 130, 153));
        product.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        product.setForeground(new java.awt.Color(109, 130, 153));
        product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productActionPerformed(evt);
            }
        });

        spinner.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinner.setModel(new javax.swing.SpinnerNumberModel());
        spinner.setToolTipText("");

        for_store.setBackground(new java.awt.Color(109, 130, 153));
        for_store.setForeground(new java.awt.Color(49, 107, 131));
        for_store.setText("Check");
        for_store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                for_storeActionPerformed(evt);
            }
        });

        for_city.setBackground(new java.awt.Color(109, 130, 153));
        for_city.setForeground(new java.awt.Color(49, 107, 131));
        for_city.setText("Check");
        for_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                for_cityActionPerformed(evt);
            }
        });

        butt_spinner.setBackground(new java.awt.Color(109, 130, 153));
        butt_spinner.setForeground(new java.awt.Color(49, 107, 131));
        butt_spinner.setText("Check");
        butt_spinner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_spinnerActionPerformed(evt);
            }
        });

        user_pnl.setBackground(new java.awt.Color(109, 130, 153));
        user_pnl.setForeground(new java.awt.Color(49, 107, 131));
        user_pnl.setText("User panel");
        user_pnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_pnlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(info_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(new_inventory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(user_pnl, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(for_city)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(for_store, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(city, 0, 128, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(store, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butt_spinner))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(info_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(for_store)
                    .addComponent(for_city)
                    .addComponent(butt_spinner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(store, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(new_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(user_pnl)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityActionPerformed

    private void storeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storeActionPerformed

    private void productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productActionPerformed

    private void for_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_for_cityActionPerformed
        // TODO add your handling code here:
    Fillcombo1();
    }//GEN-LAST:event_for_cityActionPerformed

    private void for_storeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_for_storeActionPerformed
        // TODO add your handling code here:
Fillcombo2();
    }//GEN-LAST:event_for_storeActionPerformed

    private void butt_spinnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_spinnerActionPerformed
        // TODO add your handling code here:
checking();
    }//GEN-LAST:event_butt_spinnerActionPerformed

    private void user_pnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_pnlActionPerformed
        // TODO add your handling code here:
        new Panel1(1).setVisible(true);
        dispose();
    }//GEN-LAST:event_user_pnlActionPerformed
public void checking(){
        String val;
        if(get_id()==-1)
        {JOptionPane.showMessageDialog(null,"Select all fields!");}
        else {
        val=spinner.getValue().toString();
        new_inventory.setText("Noul stoc s-a actualizat cu "+val);
        int new_value ;
        try{
            new_value = (Integer) spinner.getValue();
            String str="UPDATE Products SET Products.Inventory="+val+"WHERE Products.Id_Store="+get_id()+"AND Products.Name_Product='"+product.getSelectedItem().toString()+"'" ;
            pst=con.prepareStatement(str);
            pst.execute();
            JOptionPane.showMessageDialog(null,"Data Successfully Updated!");
            }catch (HeadlessException | SQLException e)
            {
            JOptionPane.showMessageDialog(this, e.getMessage());}
            }    
}
public int get_id(){

        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();
              String s = "SELECT Stores.Id_Store\n" +
        "FROM Stores\n" +
        "INNER JOIN Products ON Products.Id_Store=Stores.Id_Store\n" +
        "INNER JOIN Cities ON Cities.City=Stores.City\n" +
        "WHERE Cities.City='"+city.getSelectedItem().toString()+"' AND Stores.Name_Store='"+store.getSelectedItem().toString()+"' AND Products.Name_product='"+product.getSelectedItem().toString()+"'";
              rs = st.executeQuery(s);
                if(rs.next())
                {
                    return rs.getInt("Id_Store");
                }

            }catch(Exception ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }
        return -1;
}
public  void Fillcombo(){
        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();
              String s = "SELECT City FROM Cities";
              rs = st.executeQuery(s);
                while(rs.next())
                {
                    city.addItem(rs.getString("City"));
                }
            }catch(Exception ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }

}
public  void Fillcombo1(){
        store.removeAllItems();
        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();
        String s="  SELECT Stores.Name_Store\n" +
        "  FROM Stores\n" +
        "  WHERE Stores.City='"+city.getSelectedItem().toString()+"'";
              rs = st.executeQuery(s);
                while(rs.next())
                {
                    store.addItem(rs.getString("Name_Store"));
                }
            }catch(Exception ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }


}

public  void Fillcombo2(){
        product.removeAllItems();
        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();
        String s= "  SELECT Products.Name_product\n" +
        "  FROM Products\n" +
        "  INNER JOIN Stores ON Stores.Id_Store=Products.Id_Store\n" +
        "  INNER JOIN Cities ON Cities.City=Stores.City\n" +
        "  WHERE Stores.Name_Store='"+store.getSelectedItem().toString()+"' AND Stores.City='"+city.getSelectedItem().toString()+"'";
              rs = st.executeQuery(s);
                while(rs.next())
                {
                    product.addItem(rs.getString("Name_product"));
                }
            }catch(Exception ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }
}
public  void Filllabel(){
        info_inventory.setText("");
        try{
              con=DriverManager.getConnection("jdbc:sqlserver://DESKTOP-4N1HNP8;databaseName=Cities_names", "Stefan", "stefan");
              st = con.createStatement();
        String s=  " SELECT Products.Shelf \n" +
        "FROM Products \n" +
        "INNER JOIN Stores ON Stores.Id_Store=Products.Id_Store \n" +
        "INNER JOIN Cities ON Cities.City=Stores.City\n" +
        "WHERE Stores.Name_Store='"+store.getSelectedItem().toString()+"'\n" +
        "AND Stores.City='"+city.getSelectedItem().toString()+"' AND Products.Name_product='"+product.getSelectedItem().toString()+"'";
              rs = st.executeQuery(s);
                while(rs.next())
                {
                    product.addItem(rs.getString("Name_product"));
                    info_inventory.setText("Stocul produsului "+product.getSelectedItem().toString()+"este de "+rs.getInt("Shelf"));
                }
            }catch(Exception ex){
                Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
            }finally{
                try{
                    st.close();
                    rs.close();
                    con.close();
                }catch(Exception ex){
                    Logger.getLogger(Panel1.class.getName()).log(Level.SEVERE,null,ex);
                }
            }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butt_spinner;
    private javax.swing.JComboBox<String> city;
    private javax.swing.JButton for_city;
    private javax.swing.JButton for_store;
    private javax.swing.JLabel info_inventory;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel new_inventory;
    private javax.swing.JComboBox<String> product;
    private javax.swing.JSpinner spinner;
    private javax.swing.JComboBox<String> store;
    private javax.swing.JButton user_pnl;
    // End of variables declaration//GEN-END:variables
}
